{"ast":null,"code":"import _objectSpread from \"D:\\\\Shahid\\\\Backup\\\\#Projects\\\\click\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_SINGLE_PRODUCT, CHANGE_CURRENCY, RECEIVE_PRODUCTS } from \"../constants/ActionTypes\";\nvar initialState = {\n  products: [],\n  symbol: '$',\n  product_details: []\n};\n\nvar productReducer = function productReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return _objectSpread({}, state, {\n        products: action.products\n      });\n\n    case FETCH_SINGLE_PRODUCT:\n      if (state.products.findIndex(function (product) {\n        return product.id === action.productId;\n      }) !== -1) {\n        var singleItem = state.products.reduce(function (itemAcc, product) {\n          return product;\n        }, []);\n        return _objectSpread({}, state, {\n          product_details: singleItem\n        });\n      }\n\n    case CHANGE_CURRENCY:\n      return _objectSpread({}, state, {\n        symbol: action.symbol\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["D:\\Shahid\\Backup\\#Projects\\click\\frontend\\src\\reducers\\products.js"],"names":["FETCH_SINGLE_PRODUCT","CHANGE_CURRENCY","RECEIVE_PRODUCTS","initialState","products","symbol","product_details","productReducer","state","action","type","findIndex","product","id","productId","singleItem","reduce","itemAcc"],"mappings":";AAAA,SACIA,oBADJ,EAEIC,eAFJ,EAGIC,gBAHJ,QAG4B,0BAH5B;AAMA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,MAAM,EAAE,GAFS;AAGjBC,EAAAA,eAAe,EAAE;AAHA,CAArB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,gBAAL;AACI,+BAAYM,KAAZ;AACIJ,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AADrB;;AAEJ,SAAKJ,oBAAL;AACI,UAAIQ,KAAK,CAACJ,QAAN,CAAeO,SAAf,CAAyB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACK,SAA1B;AAAA,OAAhC,MAAyE,CAAC,CAA9E,EAAiF;AAC7E,YAAMC,UAAU,GAAGP,KAAK,CAACJ,QAAN,CAAeY,MAAf,CAAsB,UAACC,OAAD,EAAUL,OAAV,EAAsB;AAC3D,iBAAOA,OAAP;AACH,SAFkB,EAEhB,EAFgB,CAAnB;AAGA,iCAAYJ,KAAZ;AACIF,UAAAA,eAAe,EAAES;AADrB;AAEH;;AAEL,SAAKd,eAAL;AACI,+BAAYO,KAAZ;AACIH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AADnB;;AAEJ;AACI,aAAOG,KAAP;AAjBR;AAmBH,CApBD;;AAqBA,eAAeD,cAAf","sourcesContent":["import {\r\n    FETCH_SINGLE_PRODUCT,\r\n    CHANGE_CURRENCY,\r\n    RECEIVE_PRODUCTS } from \"../constants/ActionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    products: [],\r\n    symbol: '$',\r\n    product_details: []\r\n};\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_PRODUCTS:\r\n            return { ...state,\r\n                products: action.products };\r\n        case FETCH_SINGLE_PRODUCT:\r\n            if (state.products.findIndex(product => product.id === action.productId) !== -1) {\r\n                const singleItem = state.products.reduce((itemAcc, product) => {\r\n                    return product\r\n                }, [])\r\n                return { ...state,\r\n                    product_details: singleItem };\r\n            }\r\n\r\n        case CHANGE_CURRENCY:\r\n            return { ...state,\r\n                symbol: action.symbol };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default productReducer;"]},"metadata":{},"sourceType":"module"}