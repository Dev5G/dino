{"version":3,"file":"react-sticky-box.umd.min.js","sources":["../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/object-assign/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/index.js"],"sourcesContent":["function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst getScrollParent = node => {\n  let parent = node;\n  while ((parent = parent.parentElement)) {\n    const overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n  return window;\n};\n\nconst offsetTill = (node, target) => {\n  let current = node;\n  let offset = 0;\n  // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n  return offset;\n};\n\nlet stickyProp = null;\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";\n  else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n}\n\n// Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\nlet passiveArg = false;\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get() {\n      passiveArg = {passive: true};\n    },\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nexport default class StickyBox extends React.Component {\n  constructor(props) {\n    super(props);\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\n        `react-sticky-box's \"offset\" prop is deprecated. Please use \"offsetTop\" instead. It'll be removed in v0.8.`\n      );\n    }\n  }\n\n  getOffsets() {\n    const {offset: deprecatedOffset, offsetTop: propOffsetTop, offsetBottom} = this.props;\n    return {\n      offsetTop: propOffsetTop || deprecatedOffset,\n      offsetBottom,\n    };\n  }\n\n  registerContainerRef = n => {\n    if (!stickyProp) return;\n    this.node = n;\n    if (n) {\n      this.scrollPane = getScrollParent(this.node);\n      this.latestScrollY = this.scrollPane === window ? window.scrollY : this.scrollPane.scrollTop;\n\n      this.scrollPane.addEventListener(\"scroll\", this.handleScroll, passiveArg);\n      this.scrollPane.addEventListener(\"mousewheel\", this.handleScroll, passiveArg);\n      if (this.scrollPane === window) {\n        window.addEventListener(\"resize\", this.updateViewport);\n        this.updateViewport();\n      } else {\n        this.rosp = new ResizeObserver(this.updateScrollPane);\n        this.rosp.observe(this.scrollPane);\n        this.updateScrollPane();\n      }\n      this.ropn = new ResizeObserver(this.updateParentNode);\n      this.ropn.observe(this.node.parentNode);\n      this.updateParentNode();\n\n      this.ron = new ResizeObserver(this.updateNode);\n      this.ron.observe(this.node);\n      this.updateNode({initial: true});\n\n      this.initial();\n    } else {\n      this.scrollPane.removeEventListener(\"mousewheel\", this.handleScroll, passiveArg);\n      this.scrollPane.removeEventListener(\"scroll\", this.handleScroll, passiveArg);\n      if (this.scrollPane === window) {\n        window.removeEventListener(\"resize\", this.getMeasurements);\n      } else {\n        this.rosp.disconnect();\n      }\n      this.ropn.disconnect();\n      this.ron.disconnect();\n      this.scrollPane = null;\n    }\n  };\n\n  initial() {\n    const {bottom} = this.props;\n    const {offsetTop, offsetBottom} = this.getOffsets();\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") {\n        this.props.onChangeMode(this.mode, \"stickyBottom\");\n        this.mode = \"stickyBottom\";\n        this.node.style.position = stickyProp;\n        this.node.style.top = `${this.viewPortHeight - this.nodeHeight - offsetBottom}px`;\n      }\n    } else {\n      if (this.mode !== \"stickyTop\") {\n        this.props.onChangeMode(this.mode, \"stickyTop\");\n        this.mode = \"stickyTop\";\n        this.node.style.position = stickyProp;\n        this.node.style.top = `${offsetTop}px`;\n      }\n    }\n  }\n\n  updateViewport = () => {\n    this.viewPortHeight = window.innerHeight;\n    this.scrollPaneOffset = 0;\n  };\n\n  updateScrollPane = () => {\n    this.viewPortHeight = this.scrollPane.offsetHeight;\n    if (process.env.NODE_ENV !== \"production\" && this.viewPortHeight === 0) {\n      console.warn(\n        `react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:`,\n        this.scrollPane\n      );\n    }\n    // Only applicable if scrollPane is an offsetParent\n    if (this.scrollPane.firstChild.offsetParent === this.scrollPane) {\n      this.scrollPaneOffset = this.scrollPane.getBoundingClientRect().top;\n    } else {\n      this.scrollPaneOffset = 0;\n    }\n  };\n\n  updateParentNode = () => {\n    const parentNode = this.node.parentNode;\n    const computedParentStyle = getComputedStyle(parentNode, null);\n    const parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n    const parentPaddingBottom = parseInt(\n      computedParentStyle.getPropertyValue(\"padding-bottom\"),\n      10\n    );\n    const verticalParentPadding = parentPaddingTop + parentPaddingBottom;\n    this.naturalTop =\n      offsetTill(parentNode, this.scrollPane) + parentPaddingTop + this.scrollPaneOffset;\n    const oldParentHeight = this.parentHeight;\n    this.parentHeight = parentNode.getBoundingClientRect().height - verticalParentPadding;\n    if (this.mode === \"relative\") {\n      // If parent height decreased...\n      if (oldParentHeight > this.parentHeight) {\n        this.changeToStickyBottomIfBoxTooLow(this.latestScrollY);\n      }\n    }\n    if (oldParentHeight !== this.parentHeight && this.mode === \"relative\") {\n      this.latestScrollY = Number.POSITIVE_INFINITY;\n      this.handleScroll();\n    }\n  };\n\n  changeToStickyBottomIfBoxTooLow(scrollY) {\n    const {offsetBottom} = this.getOffsets();\n    if (\n      scrollY + this.scrollPaneOffset + this.viewPortHeight >=\n      this.naturalTop + this.nodeHeight + this.offset + offsetBottom\n    ) {\n      this.switchToStickyBottom();\n    }\n  }\n\n  updateNode = ({initial} = {}) => {\n    const prevHeight = this.nodeHeight;\n    this.nodeHeight = this.node.getBoundingClientRect().height;\n    if (!initial && prevHeight !== this.nodeHeight) {\n      this.mode = undefined;\n      const {offsetTop, offsetBottom} = this.getOffsets();\n      if (this.nodeHeight + offsetTop + offsetBottom <= this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        this.initial();\n        return;\n      } else {\n        this.mode = \"relative\";\n        this.node.style.position = \"relative\";\n        const lowestPossible = this.parentHeight - this.nodeHeight;\n        const current = this.scrollPaneOffset + this.latestScrollY - this.naturalTop + offsetTop;\n        this.offset = Math.max(0, Math.min(lowestPossible, current));\n        this.node.style.top = `${this.offset}px`;\n      }\n    }\n  };\n\n  handleScroll = () => {\n    const {offsetTop, offsetBottom} = this.getOffsets();\n    const scrollY = this.scrollPane === window ? window.scrollY : this.scrollPane.scrollTop;\n    if (scrollY === this.latestScrollY) return;\n    if (this.nodeHeight + offsetTop + offsetBottom <= this.viewPortHeight) {\n      // Just make it sticky if node smaller than viewport\n      this.initial();\n      this.latestScrollY = scrollY;\n      return;\n    }\n    const scrollDelta = scrollY - this.latestScrollY;\n    if (scrollDelta > 0) {\n      // scroll down\n      if (this.mode === \"stickyTop\") {\n        this.offset = Math.max(\n          0,\n          this.scrollPaneOffset + this.latestScrollY - this.naturalTop + offsetTop\n        );\n        if (scrollY + this.scrollPaneOffset + offsetTop > this.naturalTop) {\n          if (\n            scrollY + this.scrollPaneOffset + this.viewPortHeight <=\n            this.naturalTop + this.nodeHeight + this.offset + offsetBottom\n          ) {\n            this.props.onChangeMode(this.mode, \"relative\");\n            this.mode = \"relative\";\n            this.node.style.position = \"relative\";\n            this.node.style.top = `${this.offset}px`;\n          } else {\n            this.switchToStickyBottom();\n          }\n        }\n      } else if (this.mode === \"relative\") {\n        this.changeToStickyBottomIfBoxTooLow(scrollY);\n      }\n    } else {\n      // scroll up\n      if (this.mode === \"stickyBottom\") {\n        this.offset = Math.max(\n          0,\n          this.scrollPaneOffset +\n            this.latestScrollY +\n            this.viewPortHeight -\n            (this.naturalTop + this.nodeHeight + offsetBottom)\n        );\n        if (\n          this.scrollPaneOffset + scrollY + this.viewPortHeight <\n          this.naturalTop + this.parentHeight + offsetBottom\n        ) {\n          if (this.scrollPaneOffset + scrollY + offsetTop >= this.naturalTop + this.offset) {\n            this.props.onChangeMode(this.mode, \"relative\");\n            this.mode = \"relative\";\n            this.node.style.position = \"relative\";\n            this.node.style.top = `${this.offset}px`;\n          } else {\n            this.switchToStickyTop();\n          }\n        }\n      } else if (this.mode === \"relative\") {\n        if (this.scrollPaneOffset + scrollY + offsetTop < this.naturalTop + this.offset) {\n          this.switchToStickyTop();\n        }\n      }\n    }\n\n    this.latestScrollY = scrollY;\n  };\n\n  switchToStickyBottom = () => {\n    const {_, offsetBottom} = this.getOffsets();\n    this.props.onChangeMode(this.mode, \"stickyBottom\");\n    this.mode = \"stickyBottom\";\n    this.node.style.position = stickyProp;\n    this.node.style.top = `${this.viewPortHeight - this.nodeHeight - offsetBottom}px`;\n  };\n\n  switchToStickyTop = () => {\n    const {offsetTop, _} = this.getOffsets();\n    this.props.onChangeMode(this.mode, \"stickyTop\");\n    this.mode = \"stickyTop\";\n    this.node.style.position = stickyProp;\n    this.node.style.top = `${offsetTop}px`;\n  };\n\n  render() {\n    const {children, className, style} = this.props;\n    return (\n      <div className={className} style={style} ref={this.registerContainerRef}>\n        {children}\n      </div>\n    );\n  }\n}\n\nStickyBox.defaultProps = {\n  onChangeMode: () => {},\n  offset: 0,\n  offsetTop: 0,\n  offsetBottom: 0,\n};\n\nStickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offset: PropTypes.number, // deprecated\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool,\n};\n"],"names":["subClass","superClass","prototype","Object","create","constructor","__proto__","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","emptyFunction","module","shim","props","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$1","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","this","__entries__","defineProperty","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","WeakMap","ResizeObserver","method","apply","getScrollParent","parent","parentElement","overflowYVal","getPropertyValue","body","offsetTill","current","offset","firstChild","offsetParent","offsetTop","stickyProp","CSS","supports","passiveArg","opts","passive","e","StickyBox","_React$Component","registerContainerRef","scrollPane","latestScrollY","scrollY","scrollTop","handleScroll","updateViewport","rosp","updateScrollPane","ropn","updateParentNode","parentNode","ron","updateNode","initial","getMeasurements","viewPortHeight","innerHeight","scrollPaneOffset","offsetHeight","getBoundingClientRect","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","naturalTop","oldParentHeight","parentHeight","mode","changeToStickyBottomIfBoxTooLow","Number","POSITIVE_INFINITY","prevHeight","nodeHeight","undefined","getOffsets","offsetBottom","style","lowestPossible","max","min","onChangeMode","switchToStickyBottom","switchToStickyTop","_","deprecatedOffset","render","children","className","React","ref","Component","defaultProps"],"mappings":"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"}